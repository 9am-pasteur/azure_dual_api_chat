name: Sync upstream to main and production

on:
  schedule:
    - cron: '17 3 * * *'   # UTC（任意で変更）
  workflow_dispatch:

permissions:
  contents: write

env:
  # 親の owner/repo を指定
  UPSTREAM_REPO: 9am-pasteur/azure_dual_api_chat
  # 子に残したいパス（.github だけ or .github/workflows など）
  PROTECTED_PATH: .github

jobs:
  sync:
    # 親リポジトリでは実行しない
    if: ${{ github.repository != env.UPSTREAM_REPO }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      # 必要に応じて分岐数を増やせます
      matrix:
        include:
          - local: main
            upstream: main
          - local: production
            upstream: production

    steps:
      - name: Checkout child repo (target branch)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ matrix.local }}

      - name: Configure Git identity
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"

      - name: Add upstream and fetch
        run: |
          if git remote | grep -q '^upstream$'; then
            git remote set-url upstream "https://github.com/${UPSTREAM_REPO}.git"
          else
            git remote add upstream "https://github.com/${UPSTREAM_REPO}.git"
          fi
          git fetch upstream --prune

      - name: Save current commit (for restore)
        id: save_old
        run: echo "hash=$(git rev-parse HEAD)" >> "$GITHUB_OUTPUT"

      - name: Try fast-forward first
        id: ff
        run: |
          set -e
          if git merge --ff-only "upstream/${{ matrix.upstream }}"; then
            echo "ff_done=true" >> "$GITHUB_OUTPUT"
          else
            echo "ff_done=false" >> "$GITHUB_OUTPUT"
          fi
        continue-on-error: true

      - name: If not FF, do a regular merge
        if: steps.ff.outputs.ff_done == 'false'
        run: |
          set -e
          git merge --no-edit "upstream/${{ matrix.upstream }}"

      - name: Restore protected path from previous commit
        run: |
          set -e
          OLD="${{ steps.save_old.outputs.hash }}"
          git restore --source "$OLD" -- $PROTECTED_PATH || true
          if ! git diff --quiet -- $PROTECTED_PATH; then
            git add $PROTECTED_PATH
            git commit -m "Restore $PROTECTED_PATH after upstream sync (${{ matrix.local }})"
          fi

      - name: Push changes
        run: |
          set -e
          git push origin "${{ matrix.local }}"

